"use strict";(self.webpackChunkts_app=self.webpackChunkts_app||[]).push([[123],{454:(e,t,r)=>{r.d(t,{Ls:()=>i,_Q:()=>s,mA:()=>a});var n=r(2555);const i={name:"local-uniform-bit",vertex:{header:"\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "}},s=(0,n.A)((0,n.A)({},i),{},{vertex:(0,n.A)((0,n.A)({},i.vertex),{},{header:i.vertex.header.replace("group(1)","group(2)")})}),a={name:"local-uniform-bit",vertex:{header:"\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "}}},464:(e,t,r)=>{var n=r(1478),i=r(2080),s=r(576),a=r(6650),o=r(9385),l=r(475),u=r(9859),d=r(3596),h=r(9569),c=r(454),p=r(4994),f=r(3636),g=r(5222),m=r(6675);const x={name:"tiling-bit",vertex:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        "},fragment:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            }\n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        "}},_={name:"tiling-bit",vertex:{header:"\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n\n        ",main:"\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        "},fragment:{header:"\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        ",main:"\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n\n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n\n        "}};let v,y;class b extends f.M{constructor(){null!==v&&void 0!==v||(v=(0,h.v)({name:"tiling-sprite-shader",bits:[c.Ls,x,p.b]})),null!==y&&void 0!==y||(y=(0,h.I)({name:"tiling-sprite-shader",bits:[c.mA,_,p.m]}));const e=new g.k({uMapCoord:{value:new d.u,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new d.u,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:y,gpuProgram:v,resources:{localUniforms:new g.k({uTransformMatrix:{value:new d.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:m.g.EMPTY.source,uSampler:m.g.EMPTY.source.style}})}updateUniforms(e,t,r,n,i,s){const a=this.resources.tilingUniforms,o=s.width,l=s.height,u=s.textureMatrix,d=a.uniforms.uTextureTransform;d.set(r.a*o/e,r.b*o/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),d.invert(),a.uniforms.uMapCoord=u.mapCoord,a.uniforms.uClampFrame=u.uClampFrame,a.uniforms.uClampOffset=u.uClampOffset,a.uniforms.uTextureTransform=d,a.uniforms.uSizeAnchor[0]=e,a.uniforms.uSizeAnchor[1]=t,a.uniforms.uSizeAnchor[2]=n,a.uniforms.uSizeAnchor[3]=i,s&&(this.resources.uTexture=s.source,this.resources.uSampler=s.source.style)}}class T extends u.u{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}const w=new T;class S{constructor(){this.canBatch=!0,this.geometry=new u.u({indices:w.indices.slice(),positions:w.positions.slice(),uvs:w.uvs.slice()})}destroy(){var e;this.geometry.destroy(),null===(e=this.shader)||void 0===e||e.destroy()}}class C{constructor(e){this._state=s.U.default2d,this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const n=t.canBatch;if(n&&n===r){const{batchableMesh:r}=t;return!r._batcher.checkAndUpdateTexture(r,e.texture)}return r!==n}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const n=this._getTilingSpriteData(e),{geometry:i,canBatch:s}=n;if(s){n.batchableMesh||(n.batchableMesh=new l.U);const s=n.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),s.geometry=i,s.renderable=e,s.transform=e.groupTransform,s.setTexture(e._texture)),s.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(s,t)}else r.break(t),n.shader||(n.shader=new b),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._getTilingSpriteData(e);t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,(0,o.V)(e.groupColorAlpha,r.uColor,0),this._state.blendMode=(0,i.i)(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:w,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:r}=t;e.didViewUpdate&&this._updateBatchableMesh(e),r._batcher.updateElement(r)}else if(e.didViewUpdate){const{shader:r}=t;r.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}_getTilingSpriteData(e){return e._gpuData[this._renderer.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new S;return t.renderable=e,e._gpuData[this._renderer.uid]=t,t}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,n=e.texture.source.style;"repeat"!==n.addressMode&&(n.addressMode="repeat",n.update()),function(e,t){const r=e.texture,n=r.frame.width,i=r.frame.height;let s=0,a=0;e.applyAnchorToTexture&&(s=e.anchor.x,a=e.anchor.y),t[0]=t[6]=-s,t[2]=t[4]=1-s,t[1]=t[3]=-a,t[5]=t[7]=1-a;const o=d.u.shared;o.copyFrom(e._tileTransform.matrix),o.tx/=e.width,o.ty/=e.height,o.invert(),o.scale(e.width/n,e.height/i),function(e,t,r,n){let i=0;const s=e.length/(t||2),a=n.a,o=n.b,l=n.c,u=n.d,d=n.tx,h=n.ty;for(r*=t;i<s;){const n=e[r],s=e[r+1];e[r]=a*n+l*s+d,e[r+1]=o*n+u*s+h,r+=t,i++}}(t,2,0,o)}(e,r.uvs),function(e,t){const r=e.anchor.x,n=e.anchor.y;t[0]=-r*e.width,t[1]=-n*e.height,t[2]=(1-r)*e.width,t[3]=-n*e.height,t[4]=(1-r)*e.width,t[5]=(1-n)*e.height,t[6]=-r*e.width,t[7]=(1-n)*e.height}(e,r.positions)}destroy(){this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let n=!0;return this._renderer.type===a.W.WEBGL&&(n=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(n||r.source.isPowerOfTwo),t.canBatch}}C.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"tilingSprite"},n.XO.add(C)},475:(e,t,r)=>{r.d(t,{U:()=>n});class n{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const e=this.geometry.getBuffer("aUV"),t=e.data;let r=t;const n=this.texture.textureMatrix;return n.isSimple||(r=this._transformedUvs,this._textureMatrixUpdateId===n._updateID&&this._uvUpdateId===e._updateID||((!r||r.length<t.length)&&(r=this._transformedUvs=new Float32Array(t.length)),this._textureMatrixUpdateId=n._updateID,this._uvUpdateId=e._updateID,n.multiplyUvs(t,r))),r}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}},576:(e,t,r)=>{r.d(t,{U:()=>s});const n={normal:0,add:1,multiply:2,screen:3,overlay:4,erase:5,"normal-npm":6,"add-npm":7,"screen-npm":8,min:9,max:10},i=class e{constructor(){this.data=0,this.blendMode="normal",this.polygonOffset=0,this.blend=!0,this.depthMask=!0}get blend(){return!!(1&this.data)}set blend(e){!!(1&this.data)!==e&&(this.data^=1)}get offsets(){return!!(2&this.data)}set offsets(e){!!(2&this.data)!==e&&(this.data^=2)}set cullMode(e){"none"!==e?(this.culling=!0,this.clockwiseFrontFace="front"===e):this.culling=!1}get cullMode(){return this.culling?this.clockwiseFrontFace?"front":"back":"none"}get culling(){return!!(4&this.data)}set culling(e){!!(4&this.data)!==e&&(this.data^=4)}get depthTest(){return!!(8&this.data)}set depthTest(e){!!(8&this.data)!==e&&(this.data^=8)}get depthMask(){return!!(32&this.data)}set depthMask(e){!!(32&this.data)!==e&&(this.data^=32)}get clockwiseFrontFace(){return!!(16&this.data)}set clockwiseFrontFace(e){!!(16&this.data)!==e&&(this.data^=16)}get blendMode(){return this._blendMode}set blendMode(e){this.blend="none"!==e,this._blendMode=e,this._blendModeId=n[e]||0}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){this.offsets=!!e,this._polygonOffset=e}toString(){return"[pixi.js/core:State blendMode=".concat(this.blendMode," clockwiseFrontFace=").concat(this.clockwiseFrontFace," culling=").concat(this.culling," depthMask=").concat(this.depthMask," polygonOffset=").concat(this.polygonOffset,"]")}static for2d(){const t=new e;return t.depthTest=!1,t.blend=!0,t}};i.default2d=i.for2d();let s=i},1049:(e,t,r)=>{var n=r(1478);class i{static init(e){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;let e,t;if(this._cancelResize(),this._resizeTo===globalThis.window)e=globalThis.innerWidth,t=globalThis.innerHeight;else{const{clientWidth:r,clientHeight:n}=this._resizeTo;e=r,t=n}this.renderer.resize(e,t),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}i.extension=n.Ag.Application;var s=r(6493),a=r(1456);class o{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,s.d.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?a.R.shared:new a.R,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}o.extension=n.Ag.Application,n.XO.add(i),n.XO.add(o)},1669:(e,t,r)=>{r.d(t,{K:()=>n});class n{constructor(){this.batcherName="default",this.topology="triangle-list",this.attributeSize=4,this.indexSize=6,this.packAsQuad=!0,this.roundPixels=0,this._attributeStart=0,this._batcher=null,this._batch=null}get blendMode(){return this.renderable.groupBlendMode}get color(){return this.renderable.groupColorAlpha}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.bounds=null}destroy(){}}},1878:(e,t,r)=>{var n=r(1478),i=r(9530),s=r(576),a=r(2521),o=r(9385),l=r(9211);class u{constructor(){this.batches=[],this.batched=!1}destroy(){this.batches.forEach(e=>{a.Z.return(e)}),this.batches.length=0}}class d{constructor(e,t){this.state=s.U.for2d(),this.renderer=e,this._adaptor=t,this.renderer.runners.contextChange.add(this)}contextChange(){this._adaptor.contextChange(this.renderer)}validateRenderable(e){const t=e.context,r=!!e._gpuData,n=this.renderer.graphicsContext.updateGpuContext(t);return!(!n.isBatchable&&r===n.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._getGpuDataForRenderable(e).batches;for(let r=0;r<t.length;r++){const e=t[r];e._batcher.updateElement(e)}}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const n=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const i=n.resources.localUniforms.uniforms;i.uTransformMatrix=e.groupTransform,i.uRound=t._roundPixels|e._roundPixels,(0,o.V)(e.groupColorAlpha,i.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=this._getGpuDataForRenderable(e),r=this.renderer.graphicsContext.updateGpuContext(e.context);t.destroy(),r.isBatchable&&this._updateBatchesForRenderable(e,t)}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,n=this._getGpuDataForRenderable(e).batches;for(let i=0;i<n.length;i++){const e=n[i];r.addToBatch(e,t)}}_getGpuDataForRenderable(e){return e._gpuData[this.renderer.uid]||this._initGpuDataForRenderable(e)}_initGpuDataForRenderable(e){const t=new u;return e._gpuData[this.renderer.uid]=t,t}_updateBatchesForRenderable(e,t){const r=e.context,n=this.renderer.graphicsContext.getGpuContext(r),i=this.renderer._roundPixels|e._roundPixels;t.batches=n.batches.map(t=>{const r=a.Z.get(l.G);return t.copyTo(r),r.renderable=e,r.roundPixels=i,r})}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null}}d.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"graphics"},n.XO.add(d),n.XO.add(i.GH)},3646:(e,t,r)=>{var n=r(1478),i=r(8656),s=r(4395),a=r(7821),o=r(3596),l=r(9569),u=r(763),d=r(1193),h=r(4994),c=r(9963),p=r(3636),f=r(5222);const g={name:"local-uniform-msdf-bit",vertex:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "},fragment:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         ",main:"\n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        "}},m={name:"local-uniform-msdf-bit",vertex:{header:"\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "},fragment:{header:"\n            uniform float uDistance;\n         ",main:"\n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        "}},x={name:"msdf-bit",fragment:{header:"\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n\n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n\n            }\n        "}},_={name:"msdf-bit",fragment:{header:"\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n\n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n            }\n        "}};let v,y;class b extends p.M{constructor(e){const t=new f.k({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new o.u,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}});null!==v&&void 0!==v||(v=(0,l.v)({name:"sdf-shader",bits:[u.F,(0,d._)(e),g,x,h.b]})),null!==y&&void 0!==y||(y=(0,l.I)({name:"sdf-shader",bits:[u.a,(0,d.P)(e),m,_,h.m]})),super({glProgram:y,gpuProgram:v,resources:{localUniforms:t,batchSamplers:(0,c.n)(e)}})}}var T=r(2555),w=r(3560),S=r(4811),C=r(279),P=r(2100),F=r(5242),R=r(4307),A=r(9445),M=r(3682),U=r(6675),B=r(879),k=r(1915),z=r(5435),G=r(2604);class D extends G.A{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return(0,S.t6)(S.lj,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return(0,S.t6)(S.lj,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return(0,S.t6)(S.lj,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return(0,S.t6)(S.lj,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return(0,S.t6)(S.lj,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars){var t;null===(t=this.chars[r].texture)||void 0===t||t.destroy()}this.chars=null,e&&(this.pages.forEach(e=>e.texture.destroy(!0)),this.pages=null)}}const O=class e extends D{constructor(t){var r,n,i;super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentMaxCharHeight=0,this._currentPageIndex=-1,this._skipKerning=!1;const s=(0,T.A)((0,T.A)({},e.defaultOptions),t);this._textureSize=s.textureSize,this._mipmap=s.mipmap;const o=s.style.clone();s.overrideFill&&(o._fill.color=16777215,o._fill.alpha=1,o._fill.texture=U.g.WHITE,o._fill.fill=null),this.applyFillAsTint=s.overrideFill;const l=o.fontSize;o.fontSize=this.baseMeasurementFontSize;const u=(0,k.Z)(o);s.overrideSize?o._stroke&&(o._stroke.width*=this.baseRenderedFontSize/l):o.fontSize=this.baseRenderedFontSize=l,this._style=o,this._skipKerning=null!==(r=s.skipKerning)&&void 0!==r&&r,this.resolution=null!==(n=s.resolution)&&void 0!==n?n:1,this._padding=null!==(i=s.padding)&&void 0!==i?i:4,s.textureStyle&&(this._textureStyle=s.textureStyle instanceof B.n?s.textureStyle:new B.n(s.textureStyle)),this.fontMetrics=a.P.measureFont(u),this.lineHeight=o.lineHeight||this.fontMetrics.fontSize||o.fontSize}ensureCharacters(e){const t=a.P.graphemeSegmenter(e).filter(e=>!this._currentChars.includes(e)).filter((e,t,r)=>r.indexOf(e)===t);if(!t.length)return;let r;this._currentChars=[...this._currentChars,...t],r=-1===this._currentPageIndex?this._nextPage():this.pages[this._currentPageIndex];let{canvas:n,context:i}=r.canvasAndContext,s=r.texture.source;const o=this._style;let l=this._currentX,u=this._currentY,d=this._currentMaxCharHeight;const h=this.baseRenderedFontSize/this.baseMeasurementFontSize,c=this._padding*h;let p=!1;const f=n.width/this.resolution,g=n.height/this.resolution;for(let y=0;y<t.length;y++){var m,x,_,v;const e=t[y],r=a.P.measureText(e,o,n,!1);r.lineHeight=r.height;const b=r.width*h,T=Math.ceil(("italic"===o.fontStyle?2:1)*b)+2*c,w=r.height*h+2*c;if(p=!1,"\n"!==e&&"\r"!==e&&"\t"!==e&&" "!==e&&(p=!0,d=Math.ceil(Math.max(w,d))),l+T>f&&(u+=d,d=w,l=0,u+d>g)){s.update();const e=this._nextPage();n=e.canvasAndContext.canvas,i=e.canvasAndContext.context,s=e.texture.source,l=0,u=0,d=0}const S=b/h-(null!==(m=null===(x=o.dropShadow)||void 0===x?void 0:x.distance)&&void 0!==m?m:0)-(null!==(_=null===(v=o._stroke)||void 0===v?void 0:v.width)&&void 0!==_?_:0);if(this.chars[e]={id:e.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:S,kerning:{}},p){this._drawGlyph(i,r,l+c,u+c,h,o);const t=s.width*h,n=s.height*h,a=new R.M(l/t*s.width,u/n*s.height,T/t*s.width,w/n*s.height);this.chars[e].texture=new U.g({source:s,frame:a}),l+=Math.ceil(T)}}s.update(),this._currentX=l,this._currentY=u,this._currentMaxCharHeight=d,this._skipKerning&&this._applyKerning(t,i)}get pageTextures(){return(0,S.t6)(S.lj,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let n=0;n<e.length;n++){const i=e[n];for(let e=0;e<this._currentChars.length;e++){const n=this._currentChars[e];let s=r[i];s||(s=r[i]=t.measureText(i).width);let a=r[n];a||(a=r[n]=t.measureText(n).width);let o=t.measureText(i+n).width,l=o-(s+a);l&&(this.chars[i].kerning[n]=l),o=t.measureText(i+n).width,l=o-(s+a),l&&(this.chars[n].kerning[i]=l)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=A.N.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),n=new U.g({source:new M.b({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})});this._textureStyle&&(n.source.style=this._textureStyle);const i={canvasAndContext:t,texture:n};return this.pages[this._currentPageIndex]=i,i}_setupContext(e,t,r){var n;t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=(0,k.Z)(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const i=t._stroke,s=null!==(n=null===i||void 0===i?void 0:i.width)&&void 0!==n?n:0;if(i&&(e.lineWidth=s,e.lineJoin=i.join,e.miterLimit=i.miterLimit,e.strokeStyle=(0,z.r)(i,e)),t._fill&&(e.fillStyle=(0,z.r)(t._fill,e)),t.dropShadow){const n=t.dropShadow,i=F.Q.shared.setValue(n.color).toArray(),s=n.blur*r,a=n.distance*r;e.shadowColor="rgba(".concat(255*i[0],",").concat(255*i[1],",").concat(255*i[2],",").concat(n.alpha,")"),e.shadowBlur=s,e.shadowOffsetX=Math.cos(n.angle)*a,e.shadowOffsetY=Math.sin(n.angle)*a}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,n,i,s){var a;const o=t.text,l=t.fontProperties,u=s._stroke,d=(null!==(a=null===u||void 0===u?void 0:u.width)&&void 0!==a?a:0)*i,h=r+d/2,c=n-d/2,p=l.descent*i,f=t.lineHeight*i;let g=!1;s.stroke&&d&&(g=!0,e.strokeText(o,h,c+f-p));const{shadowBlur:m,shadowOffsetX:x,shadowOffsetY:_}=e;s._fill&&(g&&(e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0),e.fillText(o,h,c+f-p)),g&&(e.shadowBlur=m,e.shadowOffsetX=x,e.shadowOffsetY=_)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];A.N.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};O.defaultOptions={textureSize:512,style:new P.x,mipmap:!0};let W=O;function I(e,t,r,n){const i={width:0,height:0,offsetY:0,scale:t.fontSize/r.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};i.offsetY=r.baseLineOffset;let s=i.lines[0],a=null,o=!0;const l={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},u=r.baseMeasurementFontSize/t.fontSize,d=t.letterSpacing*u,h=t.wordWrapWidth*u,c=t.lineHeight?t.lineHeight*u:r.lineHeight,p=t.wordWrap&&t.breakWords,f=e=>{const t=s.width;for(let r=0;r<l.index;r++){const n=e.positions[r];s.chars.push(e.chars[r]),s.charPositions.push(n+t)}s.width+=e.width,o=!1,l.width=0,l.index=0,l.chars.length=0},g=()=>{let e=s.chars.length-1;if(n){let t=s.chars[e];for(;" "===t;)s.width-=r.chars[t].xAdvance,t=s.chars[--e]}i.width=Math.max(i.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,i.lines.push(s),i.height+=c},m=e=>e-d>h;for(let x=0;x<e.length+1;x++){let n;const i=x===e.length;i||(n=e[x]);const u=r.chars[n]||r.chars[" "];if(/(?:\s)/.test(n)||"\r"===n||"\n"===n||i){if(!o&&t.wordWrap&&m(s.width+l.width)?(g(),f(l),i||s.charPositions.push(0)):(l.start=s.width,f(l),i||s.charPositions.push(0)),"\r"===n||"\n"===n)g();else if(!i){const e=u.xAdvance+(u.kerning[a]||0)+d;s.width+=e,s.spaceWidth=e,s.spacesIndex.push(s.charPositions.length),s.chars.push(n)}}else{const e=u.kerning[a]||0,t=u.xAdvance+e+d;p&&m(s.width+l.width+t)&&(f(l),g()),l.positions[l.index++]=l.width+e,l.chars.push(n),l.width+=t}a=n}return g(),"center"===t.align?function(e){for(let t=0;t<e.lines.length;t++){const r=e.lines[t],n=e.width/2-r.width/2;for(let e=0;e<r.charPositions.length;e++)r.charPositions[e]+=n}}(i):"right"===t.align?function(e){for(let t=0;t<e.lines.length;t++){const r=e.lines[t],n=e.width-r.width;for(let e=0;e<r.charPositions.length;e++)r.charPositions[e]+=n}}(i):"justify"===t.align&&function(e){const t=e.width;for(let r=0;r<e.lines.length;r++){const n=e.lines[r];let i=0,s=n.spacesIndex[i++],a=0;const o=n.spacesIndex.length,l=(t-n.width)/o;for(let e=0;e<n.charPositions.length;e++)e===s&&(s=n.spacesIndex[i++],a+=l),n.charPositions[e]+=a}}(i),i}let E=0;const V=new class{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1,textureStyle:null},this.measureCache=(0,w.g)(1e3)}getFont(e,t){var r;let n="".concat(t.fontFamily,"-bitmap"),s=!0;if(t._fill.fill&&!t._stroke?(n+=t._fill.fill.styleKey,s=!1):(t._stroke||t.dropShadow)&&(n="".concat(t.styleKey,"-bitmap"),s=!1),!i.l.has(n)){const e=Object.create(t);e.lineHeight=0;const r=new W((0,T.A)({style:e,overrideFill:s,overrideSize:!0},this.defaultOptions));E++,E>50&&(0,C.R)("BitmapText","You have dynamically created ".concat(E,' bitmap fonts, this can be inefficient. Try pre installing your font styles using `BitmapFont.install({name:"style1", style})`')),r.once("destroy",()=>{E--,i.l.remove(n)}),i.l.set(n,r)}const a=i.l.get(n);return null===(r=a.ensureCharacters)||void 0===r||r.call(a,e),a}getLayout(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const n=this.getFont(e,t),i="".concat(e,"-").concat(t.styleKey,"-").concat(r);if(this.measureCache.has(i))return this.measureCache.get(i);const s=I(a.P.graphemeSegmenter(e),t,n,r);return this.measureCache.set(i,s),s}measureText(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.getLayout(e,t,r)}install(){var e,t;let r=arguments.length<=0?void 0:arguments[0];var n,s,a,o;"string"===typeof r&&(r={name:r,style:arguments.length<=1?void 0:arguments[1],chars:null===(n=arguments.length<=2?void 0:arguments[2])||void 0===n?void 0:n.chars,resolution:null===(s=arguments.length<=2?void 0:arguments[2])||void 0===s?void 0:s.resolution,padding:null===(a=arguments.length<=2?void 0:arguments[2])||void 0===a?void 0:a.padding,skipKerning:null===(o=arguments.length<=2?void 0:arguments[2])||void 0===o?void 0:o.skipKerning},(0,S.t6)(S.lj,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const l=null===(e=r)||void 0===e?void 0:e.name;if(!l)throw new Error("[BitmapFontManager] Property `name` is required.");r=(0,T.A)((0,T.A)({},this.defaultOptions),r);const u=r.style,d=u instanceof P.x?u:new P.x(u),h=null!==(t=r.dynamicFill)&&void 0!==t?t:this._canUseTintForStyle(d),c=new W({style:d,overrideFill:h,skipKerning:r.skipKerning,padding:r.padding,resolution:r.resolution,overrideSize:!1,textureStyle:r.textureStyle}),p=function(e){if(""===e)return[];"string"===typeof e&&(e=[e]);const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r];if(Array.isArray(n)){if(2!==n.length)throw new Error("[BitmapFont]: Invalid character range length, expecting 2 got ".concat(n.length,"."));if(0===n[0].length||0===n[1].length)throw new Error("[BitmapFont]: Invalid character delimiter.");const e=n[0].charCodeAt(0),r=n[1].charCodeAt(0);if(r<e)throw new Error("[BitmapFont]: Invalid character range.");for(let n=e,i=r;n<=i;n++)t.push(String.fromCharCode(n))}else t.push(...Array.from(n))}if(0===t.length)throw new Error("[BitmapFont]: Empty set when resolving characters.");return t}(r.chars);return c.ensureCharacters(p.join("")),i.l.set("".concat(l,"-bitmap"),c),c.once("destroy",()=>i.l.remove("".concat(l,"-bitmap"))),c}uninstall(e){const t="".concat(e,"-bitmap"),r=i.l.get(t);r&&r.destroy()}_canUseTintForStyle(e){return!e._stroke&&(!e.dropShadow||0===e.dropShadow.color)&&!e._fill.fill&&16777215===e._fill.color}};class X extends s.A{destroy(){this.context.customShader&&this.context.customShader.destroy(),super.destroy()}}class L{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Y(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}updateRenderable(e){const t=this._getGpuBitmapText(e);Y(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,n=V.getFont(e.text,e._style);r.clear(),"none"!==n.distanceField.type&&(r.customShader||(r.customShader=new b(this._renderer.limits.maxBatchableTextures)));const i=a.P.graphemeSegmenter(e.text),s=e._style;let o=n.baseLineOffset;const l=I(i,s,n,!0),u=s.padding,d=l.scale;let h=l.width,c=l.height+l.offsetY;s._stroke&&(h+=s._stroke.width/d,c+=s._stroke.width/d),r.translate(-e._anchor._x*h-u,-e._anchor._y*c-u).scale(d,d);const p=n.applyFillAsTint?s._fill.color:16777215;let f=n.fontMetrics.fontSize,g=n.lineHeight;s.lineHeight&&(f=s.fontSize/d,g=s.lineHeight/d);let m=(g-f)/2;m-n.baseLineOffset<0&&(m=0);for(let a=0;a<l.lines.length;a++){const e=l.lines[a];for(let t=0;t<e.charPositions.length;t++){const i=e.chars[t],s=n.chars[i];if(null!==s&&void 0!==s&&s.texture){const n=s.texture;r.texture(n,p||"black",Math.round(e.charPositions[t]+s.xOffset),Math.round(o+s.yOffset+m),n.orig.width,n.orig.height)}}o+=g}}_getGpuBitmapText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new X;return e._gpuData[this._renderer.uid]=t,this._updateContext(e,t),t}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,n=i.l.get("".concat(r,"-bitmap")),{a:s,b:a,c:o,d:l}=e.groupTransform,u=Math.sqrt(s*s+a*a),d=Math.sqrt(o*o+l*l),h=(Math.abs(u)+Math.abs(d))/2,c=n.baseRenderedFontSize/e._style.fontSize,p=h*n.distanceField.range*(1/c);t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){this._renderer=null}}function Y(e,t){t.groupTransform=e.groupTransform,t.groupColorAlpha=e.groupColorAlpha,t.groupColor=e.groupColor,t.groupBlendMode=e.groupBlendMode,t.globalDisplayStatus=e.globalDisplayStatus,t.groupTransform=e.groupTransform,t.localDisplayStatus=e.localDisplayStatus,t.groupAlpha=e.groupAlpha,t._roundPixels=e._roundPixels}L.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"bitmapText"},n.XO.add(L)},3989:(e,t,r)=>{var n=r(1478),i=r(6595),s=r(1669);class a extends s.K{constructor(e){super(),this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){const{canvasText:e}=this._renderer;e.getReferenceCount(this.currentKey)>0?e.decreaseReferenceCount(this.currentKey):this.texture&&e.returnTexture(this.texture),this._renderer.runners.resolutionChange.remove(this),this._renderer=null}}class o{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e.styleKey;return t.currentKey!==r||e._didTextUpdate}addRenderable(e,t){const r=this._getGpuText(e);if(e._didTextUpdate){const t=e._autoResolution?this._renderer.resolution:e.resolution;r.currentKey===e.styleKey&&e.resolution===t||this._updateGpuText(e),e._didTextUpdate=!1}this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}_updateGpuText(e){const t=this._getGpuText(e);t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,t.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e.styleKey,(0,i.s)(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new a(this._renderer);return t.currentKey="--",t.renderable=e,t.transform=e.groupTransform,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}o.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"text"};var l=r(3202),u=r(879),d=r(4811),h=r(2100),c=r(4749),p=r(7833);class f{constructor(e){this._activeTextures={},this._renderer=e}getTexture(e,t,r,n){var i;"string"===typeof e&&((0,d.t6)("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof h.x||(e.style=new h.x(e.style)),e.textureStyle instanceof u.n||(e.textureStyle=new u.n(e.textureStyle)),"string"!==typeof e.text&&(e.text=e.text.toString());const{text:s,style:a,textureStyle:o}=e,l=null!==(i=e.resolution)&&void 0!==i?i:this._renderer.resolution,{frame:f,canvasAndContext:g}=p.v.getCanvasAndContext({text:s,style:a,resolution:l}),m=(0,c.M)(g.canvas,f.width,f.height,l);if(o&&(m.source.style=o),a.trim&&(f.pad(a.padding),m.frame.copyFrom(f),m.frame.scale(1/l),m.updateUvs()),a.filters){const e=this._applyFilters(m,a.filters);return this.returnTexture(m),p.v.returnCanvasAndContext(g),e}return this._renderer.texture.initSource(m._source),p.v.returnCanvasAndContext(g),m}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",l.W.returnTexture(e,!0)}renderTextToCanvas(){(0,d.t6)("8.10.0","CanvasTextSystem.renderTextToCanvas: no longer supported, use CanvasTextSystem.getTexture instead")}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e.styleKey;if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const r=this.getTexture({text:e.text,style:e.style,resolution:e._resolution,textureStyle:e.textureStyle});return this._activeTextures[t]={texture:r,usageCount:1},r}decreaseReferenceCount(e){const t=this._activeTextures[e];t.usageCount--,0===t.usageCount&&(this.returnTexture(t.texture),this._activeTextures[e]=null)}getReferenceCount(e){var t,r;return null!==(t=null===(r=this._activeTextures[e])||void 0===r?void 0:r.usageCount)&&void 0!==t?t:0}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}_applyFilters(e,t){const r=this._renderer.renderTarget.renderTarget,n=this._renderer.filter.generateFilteredTexture({texture:e,filters:t});return this._renderer.renderTarget.bind(r,!1),n}destroy(){this._renderer=null;for(const e in this._activeTextures)this._activeTextures[e]&&this.returnTexture(this._activeTextures[e].texture);this._activeTextures=null}}f.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem,n.Ag.CanvasSystem],name:"canvasText"},n.XO.add(f),n.XO.add(o)},4207:(e,t,r)=>{var n=r(1478),i=r(3596),s=r(2590),a=r(5222),o=r(2080),l=r(9385),u=r(475);class d{destroy(){}}class h{constructor(e,t){this.localUniforms=new a.k({uTransformMatrix:{value:new i.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new s.T({0:this.localUniforms}),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,n=e.batched;if(t.batched=n,r!==n)return!0;if(n){const r=e._geometry;if(r.indices.length!==t.indexSize||r.positions.length!==t.vertexSize)return t.indexSize=r.indices.length,t.vertexSize=r.positions.length,!0;const n=this._getBatchableMesh(e);return n.texture.uid!==e._texture.uid&&(n._textureMatrixUpdateId=-1),!n._batcher.checkAndUpdateTexture(n,e._texture)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,n=this._getMeshData(e);var i,s;e.didViewUpdate&&(n.indexSize=null===(i=e._geometry.indices)||void 0===i?void 0:i.length,n.vertexSize=null===(s=e._geometry.positions)||void 0===s?void 0:s.length);if(n.batched){const n=this._getBatchableMesh(e);n.setTexture(e._texture),n.geometry=e._geometry,r.addToBatch(n,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._getBatchableMesh(e);t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}execute(e){if(!e.isRenderable)return;e.state.blendMode=(0,o.i)(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),(0,l.V)(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new d),e._gpuData[this.renderer.uid].meshData||this._initMeshData(e)}_initMeshData(e){return e._gpuData[this.renderer.uid].meshData={batched:e.batched,indexSize:0,vertexSize:0},e._gpuData[this.renderer.uid].meshData}_getBatchableMesh(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new d),e._gpuData[this.renderer.uid].batchableMesh||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=new u.U;return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,e._gpuData[this.renderer.uid].batchableMesh=t,t}destroy(){this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}h.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"mesh"},n.XO.add(h)},4749:(e,t,r)=>{r.d(t,{M:()=>s});var n=r(3202);const i=new(r(6373).c);function s(e,t,r,s){const a=i;a.minX=0,a.minY=0,a.maxX=e.width/s|0,a.maxY=e.height/s|0;const o=n.W.getOptimalTexture(a.width,a.height,s,!1);return o.source.uploadMethodId="image",o.source.resource=e,o.source.alphaMode="premultiply-alpha-on-upload",o.frame.width=t/s,o.frame.height=r/s,o.source.emit("update",o.source),o.updateUvs(),o}},4821:(e,t,r)=>{var n=r(1478),i=r(475),s=r(2555),a=r(4811),o=r(9859);const l=class e extends o.u{constructor(){var e;super({});let t=null!==(e=arguments.length<=0?void 0:arguments[0])&&void 0!==e?e:{};"number"===typeof t&&((0,a.t6)(a.lj,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:arguments.length<=1?void 0:arguments[1],verticesX:arguments.length<=2?void 0:arguments[2],verticesY:arguments.length<=3?void 0:arguments[3]}),this.build(t)}build(t){var r,n,i,a;t=(0,s.A)((0,s.A)({},e.defaultOptions),t),this.verticesX=null!==(r=this.verticesX)&&void 0!==r?r:t.verticesX,this.verticesY=null!==(n=this.verticesY)&&void 0!==n?n:t.verticesY,this.width=null!==(i=this.width)&&void 0!==i?i:t.width,this.height=null!==(a=this.height)&&void 0!==a?a:t.height;const o=this.verticesX*this.verticesY,l=[],u=[],d=[],h=this.verticesX-1,c=this.verticesY-1,p=this.width/h,f=this.height/c;for(let e=0;e<o;e++){const t=e%this.verticesX,r=e/this.verticesX|0;l.push(t*p,r*f),u.push(t/h,r/c)}const g=h*c;for(let e=0;e<g;e++){const t=e%h,r=e/h|0,n=r*this.verticesX+t,i=r*this.verticesX+t+1,s=(r+1)*this.verticesX+t,a=(r+1)*this.verticesX+t+1;d.push(n,i,s,i,a,s)}this.buffers[0].data=new Float32Array(l),this.buffers[1].data=new Float32Array(u),this.indexBuffer.data=new Uint32Array(d),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};l.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let u=l;const d=class e extends u{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t=(0,s.A)((0,s.A)({},e.defaultOptions),t),super({width:t.width,height:t.height,verticesX:4,verticesY:4}),this.update(t)}update(e){var t,r,n,i,s,a,o,l,u,d;this.width=null!==(t=e.width)&&void 0!==t?t:this.width,this.height=null!==(r=e.height)&&void 0!==r?r:this.height,this._originalWidth=null!==(n=e.originalWidth)&&void 0!==n?n:this._originalWidth,this._originalHeight=null!==(i=e.originalHeight)&&void 0!==i?i:this._originalHeight,this._leftWidth=null!==(s=e.leftWidth)&&void 0!==s?s:this._leftWidth,this._rightWidth=null!==(a=e.rightWidth)&&void 0!==a?a:this._rightWidth,this._topHeight=null!==(o=e.topHeight)&&void 0!==o?o:this._topHeight,this._bottomHeight=null!==(l=e.bottomHeight)&&void 0!==l?l:this._bottomHeight,this._anchorX=null===(u=e.anchor)||void 0===u?void 0:u.x,this._anchorY=null===(d=e.anchor)||void 0===d?void 0:d.y,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,{width:t,height:r,_leftWidth:n,_rightWidth:i,_topHeight:s,_bottomHeight:a,_anchorX:o,_anchorY:l}=this,u=n+i,d=t>u?1:t/u,h=s+a,c=r>h?1:r/h,p=Math.min(d,c),f=o*t,g=l*r;e[0]=e[8]=e[16]=e[24]=-f,e[2]=e[10]=e[18]=e[26]=n*p-f,e[4]=e[12]=e[20]=e[28]=t-i*p-f,e[6]=e[14]=e[22]=e[30]=t-f,e[1]=e[3]=e[5]=e[7]=-g,e[9]=e[11]=e[13]=e[15]=s*p-g,e[17]=e[19]=e[21]=e[23]=r-a*p-g,e[25]=e[27]=e[29]=e[31]=r-g,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};d.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let h=d;class c extends i.U{constructor(){super(),this.geometry=new h}destroy(){this.geometry.destroy()}}class p{constructor(e){this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return e._gpuData[this._renderer.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=e._gpuData[this._renderer.uid]=new c,r=t;return r.renderable=e,r.transform=e.groupTransform,r.texture=e._texture,r.roundPixels=this._renderer._roundPixels|e._roundPixels,e.didViewUpdate||this._updateBatchableSprite(e,r),t}destroy(){this._renderer=null}}p.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"nineSliceSprite"},n.XO.add(p)},5159:(e,t,r)=>{var n=r(1478);class i{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){"pushFilter"===e.action?this._renderer.filter.push(e):"popFilter"===e.action&&this._renderer.filter.pop()}destroy(){this._renderer=null}}i.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"filter"};var s=r(3596),a=r(2590),o=r(9801),l=r(5222),u=r(6675),d=r(3202),h=r(6650),c=r(6373);const p=new s.u;var f=r(279);const g=new o.V({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:8,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class m{constructor(){this.skip=!1,this.inputTexture=null,this.backTexture=null,this.filters=null,this.bounds=new c.c,this.container=null,this.blendRequired=!1,this.outputRenderSurface=null,this.globalFrame={x:0,y:0,width:0,height:0}}}class x{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new l.k({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new a.T({}),this.renderer=e}get activeBackTexture(){var e;return null===(e=this._activeFilterData)||void 0===e?void 0:e.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters,n=this._pushFilterData();n.skip=!1,n.filters=r,n.container=e.container,n.outputRenderSurface=t.renderTarget.renderSurface;const i=t.renderTarget.renderTarget.colorTexture.source,s=i.resolution,a=i.antialias;if(0===r.length)return void(n.skip=!0);const o=n.bounds;if(this._calculateFilterArea(e,o),this._calculateFilterBounds(n,t.renderTarget.rootViewPort,a,s,1),n.skip)return;const l=this._getPreviousFilterData(),u=this._findFilterResolution(s);let d=0,h=0;l&&(d=l.bounds.minX,h=l.bounds.minY),this._calculateGlobalFrame(n,d,h,u,i.width,i.height),this._setupFilterTextures(n,o,t,l)}generateFilteredTexture(e){let{texture:t,filters:r}=e;const n=this._pushFilterData();this._activeFilterData=n,n.skip=!1,n.filters=r;const i=t.source,s=i.resolution,a=i.antialias;if(0===r.length)return n.skip=!0,t;const o=n.bounds;if(o.addRect(t.frame),this._calculateFilterBounds(n,o.rectangle,a,s,0),n.skip)return t;const l=s;this._calculateGlobalFrame(n,0,0,l,i.width,i.height),n.outputRenderSurface=d.W.getOptimalTexture(o.width,o.height,n.resolution,n.antialias),n.backTexture=u.g.EMPTY,n.inputTexture=t;this.renderer.renderTarget.finishRenderPass(),this._applyFiltersToTexture(n,!0);const h=n.outputRenderSurface;return h.source.alphaMode="premultiplied-alpha",h}pop(){const e=this.renderer,t=this._popFilterData();t.skip||(e.globalUniforms.pop(),e.renderTarget.finishRenderPass(),this._activeFilterData=t,this._applyFiltersToTexture(t,!1),t.blendRequired&&d.W.returnTexture(t.backTexture),d.W.returnTexture(t.inputTexture))}getBackTexture(e,t,r){const n=e.colorTexture.source._resolution,i=d.W.getOptimalTexture(t.width,t.height,n,!1);let s=t.minX,a=t.minY;r&&(s-=r.minX,a-=r.minY),s=Math.floor(s*n),a=Math.floor(a*n);const o=Math.ceil(t.width*n),l=Math.ceil(t.height*n);return this.renderer.renderTarget.copyToTexture(e,i,{x:s,y:a},{width:o,height:l},{x:0,y:0}),i}applyFilter(e,t,r,n){const i=this.renderer,s=this._activeFilterData,a=s.outputRenderSurface===r,o=i.renderTarget.rootRenderTarget.colorTexture.source._resolution,l=this._findFilterResolution(o);let u=0,d=0;if(a){const e=this._findPreviousFilterOffset();u=e.x,d=e.y}this._updateFilterUniforms(t,r,s,u,d,l,a,n),this._setupBindGroupsAndRender(e,t,i)}calculateSpriteMatrix(e,t){const r=this._activeFilterData,n=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(s.u.shared),a=t.renderGroup||t.parentRenderGroup;return a&&a.cacheToLocalTransform&&i.prepend(a.cacheToLocalTransform),i.invert(),n.prepend(i),n.scale(1/t.texture.orig.width,1/t.texture.orig.height),n.translate(t.anchor.x,t.anchor.y),n}destroy(){}_setupBindGroupsAndRender(e,t,r){if(r.renderPipes.uniformBatch){const e=r.renderPipes.uniformBatch.getUboResource(this._filterGlobalUniforms);this._globalFilterBindGroup.setResource(e,0)}else this._globalFilterBindGroup.setResource(this._filterGlobalUniforms,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,r.encoder.draw({geometry:g,shader:e,state:e._state,topology:"triangle-list"}),r.type===h.W.WEBGL&&r.renderTarget.finishRenderPass()}_setupFilterTextures(e,t,r,n){if(e.backTexture=u.g.EMPTY,e.inputTexture=d.W.getOptimalTexture(t.width,t.height,e.resolution,e.antialias),e.blendRequired){r.renderTarget.finishRenderPass();const i=r.renderTarget.getRenderTarget(e.outputRenderSurface);e.backTexture=this.getBackTexture(i,t,null===n||void 0===n?void 0:n.bounds)}r.renderTarget.bind(e.inputTexture,!0),r.globalUniforms.push({offset:t})}_calculateGlobalFrame(e,t,r,n,i,s){const a=e.globalFrame;a.x=t*n,a.y=r*n,a.width=i*n,a.height=s*n}_updateFilterUniforms(e,t,r,n,i,s,a,o){const l=this._filterGlobalUniforms.uniforms,d=l.uOutputFrame,h=l.uInputSize,c=l.uInputPixel,p=l.uInputClamp,f=l.uGlobalFrame,g=l.uOutputTexture;a?(d[0]=r.bounds.minX-n,d[1]=r.bounds.minY-i):(d[0]=0,d[1]=0),d[2]=e.frame.width,d[3]=e.frame.height,h[0]=e.source.width,h[1]=e.source.height,h[2]=1/h[0],h[3]=1/h[1],c[0]=e.source.pixelWidth,c[1]=e.source.pixelHeight,c[2]=1/c[0],c[3]=1/c[1],p[0]=.5*c[2],p[1]=.5*c[3],p[2]=e.frame.width*h[2]-.5*c[2],p[3]=e.frame.height*h[3]-.5*c[3];const m=this.renderer.renderTarget.rootRenderTarget.colorTexture;f[0]=n*s,f[1]=i*s,f[2]=m.source.width*s,f[3]=m.source.height*s,t instanceof u.g&&(t.source.resource=null);const x=this.renderer.renderTarget.getRenderTarget(t);this.renderer.renderTarget.bind(t,!!o),t instanceof u.g?(g[0]=t.frame.width,g[1]=t.frame.height):(g[0]=x.width,g[1]=x.height),g[2]=x.isRoot?-1:1,this._filterGlobalUniforms.update()}_findFilterResolution(e){let t=this._filterStackIndex-1;for(;t>0&&this._filterStack[t].skip;)--t;return t>0&&this._filterStack[t].inputTexture?this._filterStack[t].inputTexture.source._resolution:e}_findPreviousFilterOffset(){let e=0,t=0,r=this._filterStackIndex;for(;r>0;){r--;const n=this._filterStack[r];if(!n.skip){e=n.bounds.minX,t=n.bounds.minY;break}}return{x:e,y:t}}_calculateFilterArea(e,t){if(e.renderables?function(e,t){t.clear();const r=t.matrix;for(let i=0;i<e.length;i++){var n;const r=e[i];if(r.globalDisplayStatus<7)continue;const s=null!==(n=r.renderGroup)&&void 0!==n?n:r.parentRenderGroup;null!==s&&void 0!==s&&s.isCachedAsTexture?t.matrix=p.copyFrom(s.textureOffsetInverseTransform).append(r.worldTransform):null!==s&&void 0!==s&&s._parentCacheAsTextureRenderGroup?t.matrix=p.copyFrom(s._parentCacheAsTextureRenderGroup.inverseWorldTransform).append(r.groupTransform):t.matrix=r.worldTransform,t.addBounds(r.bounds)}t.matrix=r}(e.renderables,t):e.filterEffect.filterArea?(t.clear(),t.addRect(e.filterEffect.filterArea),t.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,t),e.container){const r=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;r&&t.applyMatrix(r)}}_applyFiltersToTexture(e,t){const r=e.inputTexture,n=e.bounds,i=e.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(e.backTexture.source,3),1===i.length)i[0].apply(this,r,e.outputRenderSurface,t);else{let r=e.inputTexture;const s=d.W.getOptimalTexture(n.width,n.height,r.source._resolution,!1);let a=s,o=0;for(o=0;o<i.length-1;++o){i[o].apply(this,r,a,!0);const e=r;r=a,a=e}i[o].apply(this,r,e.outputRenderSurface,t),d.W.returnTexture(s)}}_calculateFilterBounds(e,t,r,n,i){const s=this.renderer,a=e.bounds,o=e.filters;let l=1/0,u=0,d=!0,h=!1,c=!1,p=!0;for(let x=0;x<o.length;x++){var g,m;const e=o[x];l=Math.min(l,"inherit"===e.resolution?n:e.resolution),u+=e.padding,"off"===e.antialias?d=!1:"inherit"===e.antialias&&d&&(d=r),e.clipToViewport||(p=!1);if(!!!(e.compatibleRenderers&s.type)){c=!1;break}if(e.blendRequired&&null!==(g=null===(m=s.backBuffer)||void 0===m?void 0:m.useBackBuffer)&&void 0!==g&&!g){(0,f.R)("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),c=!1;break}c=e.enabled||c,h||(h=e.blendRequired)}c?(p&&a.fitBounds(0,t.width/n,0,t.height/n),a.scale(l).ceil().scale(1/l).pad((0|u)*i),a.isPositive?(e.antialias=d,e.resolution=l,e.blendRequired=h):e.skip=!0):e.skip=!0}_popFilterData(){return this._filterStackIndex--,this._filterStack[this._filterStackIndex]}_getPreviousFilterData(){let e,t=this._filterStackIndex-1;for(;t>0&&(t--,e=this._filterStack[t],e.skip););return e}_pushFilterData(){let e=this._filterStack[this._filterStackIndex];return e||(e=this._filterStack[this._filterStackIndex]=new m),this._filterStackIndex++,e}}x.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem],name:"filter"},n.XO.add(x),n.XO.add(i)},5231:(e,t,r)=>{var n=r(1478);class i{execute(e,t){const r=e.state,n=e.renderer,i=t.shader||e.defaultShader;i.resources.uTexture=t.texture._source,i.resources.uniforms=e.localUniforms;const s=n.gl,a=e.getBuffers(t);n.shader.bind(i),n.state.set(r),n.geometry.bind(a.geometry,i.glProgram);const o=2===a.geometry.indexBuffer.data.BYTES_PER_ELEMENT?s.UNSIGNED_SHORT:s.UNSIGNED_INT;s.drawElements(s.TRIANGLES,6*t.particleChildren.length,o,0)}}var s=r(3596),a=r(5222),o=r(2080),l=r(576),u=r(9385),d=r(5202),h=r(6333),c=r(9801),p=r(7393),f=r(1013);function g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const r=6*e;if(r>65535?t||(t=new Uint32Array(r)):t||(t=new Uint16Array(r)),t.length!==r)throw new Error("Out buffer length is incorrect, got ".concat(t.length," and expected ").concat(r));for(let n=0,i=0;n<r;n+=6,i+=4)t[n+0]=i+0,t[n+1]=i+1,t[n+2]=i+2,t[n+3]=i+0,t[n+4]=i+2,t[n+5]=i+3;return t}function m(e,t){const r=[];r.push("\n\n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            ");let n=0;for(const s in e){const i=e[s];if(t!==i.dynamic)continue;r.push("offset = index + ".concat(n)),r.push(i.code);n+=(0,p.m)(i.format).stride/4}r.push("\n            index += stride * 4;\n        }\n    "),r.unshift("\n        var stride = ".concat(n,";\n    "));const i=r.join("\n");return new Function("ps","f32v","u32v",i)}class x{constructor(e){var t;this._size=0,this._generateParticleUpdateCache={};const r=this._size=null!==(t=e.size)&&void 0!==t?t:1e3,n=e.properties;let i=0,s=0;for(const d in n){const e=n[d],t=(0,p.m)(e.format);e.dynamic?s+=t.stride:i+=t.stride}this._dynamicStride=s/4,this._staticStride=i/4,this.staticAttributeBuffer=new f.u(4*r*i),this.dynamicAttributeBuffer=new f.u(4*r*s),this.indexBuffer=g(r);const a=new c.V;let o=0,l=0;this._staticBuffer=new d.h({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:h.S.VERTEX|h.S.COPY_DST}),this._dynamicBuffer=new d.h({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:h.S.VERTEX|h.S.COPY_DST});for(const d in n){const e=n[d],t=(0,p.m)(e.format);e.dynamic?(a.addAttribute(e.attributeName,{buffer:this._dynamicBuffer,stride:4*this._dynamicStride,offset:4*o,format:e.format}),o+=t.size):(a.addAttribute(e.attributeName,{buffer:this._staticBuffer,stride:4*this._staticStride,offset:4*l,format:e.format}),l+=t.size)}a.addIndex(this.indexBuffer);const u=this.getParticleUpdate(n);this._dynamicUpload=u.dynamicUpdate,this._staticUpload=u.staticUpdate,this.geometry=a}getParticleUpdate(e){const t=function(e){const t=[];for(const r in e){const n=e[r];t.push(r,n.code,n.dynamic?"d":"s")}return t.join("_")}(e);return this._generateParticleUpdateCache[t]||(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e)),this._generateParticleUpdateCache[t]}generateParticleUpdate(e){return function(e){return{dynamicUpdate:m(e,!0),staticUpdate:m(e,!1)}}(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,1.5*this._size|0),this.staticAttributeBuffer=new f.u(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new f.u(this._size*this._dynamicStride*4*4),this.indexBuffer=g(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const t=this.staticAttributeBuffer;this._staticUpload(e,t.float32View,t.uint32View),this._staticBuffer.setDataWithSize(t.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}var _=r(5242),v=r(5920),y=r(7699),b=r(3636),T=r(6675),w=r(879),S="\nstruct ParticleUniforms {\n  uTranslationMatrix:mat3x3<f32>,\n  uColor:vec4<f32>,\n  uRound:f32,\n  uResolution:vec2<f32>,\n};\n\nfn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32>\n{\n  return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n}\n\n@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;\n\n@group(1) @binding(0) var uTexture: texture_2d<f32>;\n@group(1) @binding(1) var uSampler : sampler;\n\nstruct VSOutput {\n    @builtin(position) position: vec4<f32>,\n    @location(0) uv : vec2<f32>,\n    @location(1) color : vec4<f32>,\n  };\n@vertex\nfn mainVertex(\n  @location(0) aVertex: vec2<f32>,\n  @location(1) aPosition: vec2<f32>,\n  @location(2) aUV: vec2<f32>,\n  @location(3) aColor: vec4<f32>,\n  @location(4) aRotation: f32,\n) -> VSOutput {\n  \n   let v = vec2(\n       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),\n       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)\n   ) + aPosition;\n\n   var position = vec4((uniforms.uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n   if(uniforms.uRound == 1.0) {\n       position = vec4(roundPixels(position.xy, uniforms.uResolution), position.zw);\n   }\n\n    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;\n\n  return VSOutput(\n   position,\n   aUV,\n   vColor,\n  );\n}\n\n@fragment\nfn mainFragment(\n  @location(0) uv: vec2<f32>,\n  @location(1) color: vec4<f32>,\n  @builtin(position) position: vec4<f32>,\n) -> @location(0) vec4<f32> {\n\n    var sample = textureSample(uTexture, uSampler, uv) * color;\n   \n    return sample;\n}";class C extends b.M{constructor(){super({glProgram:v.M.from({vertex:"attribute vec2 aVertex;\nattribute vec2 aUV;\nattribute vec4 aColor;\n\nattribute vec2 aPosition;\nattribute float aRotation;\n\nuniform mat3 uTranslationMatrix;\nuniform float uRound;\nuniform vec2 uResolution;\nuniform vec4 uColor;\n\nvarying vec2 vUV;\nvarying vec4 vColor;\n\nvec2 roundPixels(vec2 position, vec2 targetSize)\n{       \n    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n}\n\nvoid main(void){\n    float cosRotation = cos(aRotation);\n    float sinRotation = sin(aRotation);\n    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;\n    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;\n\n    vec2 v = vec2(x, y);\n    v = v + aPosition;\n\n    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    if(uRound == 1.0)\n    {\n        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n    }\n\n    vUV = aUV;\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;\n}\n",fragment:"varying vec2 vUV;\nvarying vec4 vColor;\n\nuniform sampler2D uTexture;\n\nvoid main(void){\n    vec4 color = texture2D(uTexture, vUV) * vColor;\n    gl_FragColor = color;\n}"}),gpuProgram:y.B.from({fragment:{source:S,entryPoint:"mainFragment"},vertex:{source:S,entryPoint:"mainVertex"}}),resources:{uTexture:T.g.WHITE.source,uSampler:new w.n({}),uniforms:{uTranslationMatrix:{value:new s.u,type:"mat3x3<f32>"},uColor:{value:new _.Q(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class P{constructor(e,t){this.state=l.U.for2d(),this.localUniforms=new a.k({uTranslationMatrix:{value:new s.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new C,this.state=l.U.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return e._gpuData[this.renderer.uid]||this._initBuffer(e)}_initBuffer(e){return e._gpuData[this.renderer.uid]=new x({size:e.particleChildren.length,properties:e._properties}),e._gpuData[this.renderer.uid]}updateRenderable(e){}execute(e){const t=e.particleChildren;if(0===t.length)return;const r=this.renderer,n=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const i=this.state;n.update(t,e._childrenDirty),e._childrenDirty=!1,i.blendMode=(0,o.i)(e.blendMode,e.texture._source);const s=this.localUniforms.uniforms,a=s.uTranslationMatrix;e.worldTransform.copyTo(a),a.prepend(r.globalUniforms.globalUniformData.projectionMatrix),s.uResolution=r.globalUniforms.globalUniformData.resolution,s.uRound=r._roundPixels|e._roundPixels,(0,u.V)(e.groupColorAlpha,s.uColor,0),this.adaptor.execute(this,e)}destroy(){this.renderer=null,this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class F extends P{constructor(e){super(e,new i)}}F.extension={type:[n.Ag.WebGLPipes],name:"particle"};class R{execute(e,t){const r=e.renderer,n=t.shader||e.defaultShader;n.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),n.groups[1]=r.texture.getTextureBindGroup(t.texture);const i=e.state,s=e.getBuffers(t);r.encoder.draw({geometry:s.geometry,shader:t.shader||e.defaultShader,state:i,size:6*t.particleChildren.length})}}class A extends P{constructor(e){super(e,new R)}}A.extension={type:[n.Ag.WebGPUPipes],name:"particle"},n.XO.add(F),n.XO.add(A)},5608:(e,t,r)=>{var n=r(1478),i=r(6675),s=r(6595),a=r(1669);class o extends a.K{constructor(e){super(),this.generatingTexture=!1,this.currentKey="--",this._renderer=e,e.runners.resolutionChange.add(this)}resolutionChange(){const e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){const{htmlText:e}=this._renderer;null===e.getReferenceCount(this.currentKey)?e.returnTexturePromise(this.texturePromise):e.decreaseReferenceCount(this.currentKey),this._renderer.runners.resolutionChange.remove(this),this.texturePromise=null,this._renderer=null}}class l{constructor(e){this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e.styleKey;return t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e);if(e._didTextUpdate){const t=e._autoResolution?this._renderer.resolution:e.resolution;r.currentKey===e.styleKey&&e.resolution===t||this._updateGpuText(e).catch(e=>{console.error(e)}),e._didTextUpdate=!1,(0,s.s)(r,e)}this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e);t._batcher.updateElement(t)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=t.texturePromise;t.texturePromise=null,t.generatingTexture=!0,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;let n=this._renderer.htmlText.getTexturePromise(e);r&&(n=n.finally(()=>{this._renderer.htmlText.decreaseReferenceCount(t.currentKey),this._renderer.htmlText.returnTexturePromise(r)})),t.texturePromise=n,t.currentKey=e.styleKey,t.texture=await n;const i=e.renderGroup||e.parentRenderGroup;i&&(i.structureDidChange=!0),t.generatingTexture=!1,(0,s.s)(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){const t=new o(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.texture=i.g.EMPTY,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}l.extension={type:[n.Ag.WebGLPipes,n.Ag.WebGPUPipes,n.Ag.CanvasPipes],name:"htmlText"};var u=r(9445),d=r(3202),h=r(6650),c=r(3144);var p=r(279),f=r(2521),g=r(4749);const m="http://www.w3.org/2000/svg",x="http://www.w3.org/1999/xhtml";class _{constructor(){this.svgRoot=document.createElementNS(m,"svg"),this.foreignObject=document.createElementNS(m,"foreignObject"),this.domElement=document.createElementNS(x,"div"),this.styleElement=document.createElementNS(x,"style");const{foreignObject:e,svgRoot:t,styleElement:r,domElement:n}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(n),this.image=c.e.get().createImage()}destroy(){this.svgRoot.remove(),this.foreignObject.remove(),this.styleElement.remove(),this.domElement.remove(),this.image.src="",this.image.remove(),this.svgRoot=null,this.foreignObject=null,this.styleElement=null,this.domElement=null,this.image=null,this.canvasAndContext=null}}var v=r(8656);async function y(e,t){const r=await async function(e){const t=await c.e.get().fetch(e),r=await t.blob(),n=new FileReader;return await new Promise((e,t)=>{n.onloadend=()=>e(n.result),n.onerror=t,n.readAsDataURL(r)})}(t);return'@font-face {\n        font-family: "'.concat(e.fontFamily,'";\n        font-weight: ').concat(e.fontWeight,";\n        font-style: ").concat(e.fontStyle,";\n        src: url('").concat(r,"');\n    }")}const b=new Map;let T;class w{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===h.W.WEBGPU}getTexture(e){return this.getTexturePromise(e)}getManagedTexture(e){const t=e.styleKey;if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].promise;const r=this._buildTexturePromise(e).then(e=>(this._activeTextures[t].texture=e,e));return this._activeTextures[t]={texture:null,promise:r,usageCount:1},r}getReferenceCount(e){var t,r;return null!==(t=null===(r=this._activeTextures[e])||void 0===r?void 0:r.usageCount)&&void 0!==t?t:null}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,0===t.usageCount&&(t.texture?this._cleanUp(t.texture):t.promise.then(e=>{t.texture=e,this._cleanUp(t.texture)}).catch(()=>{(0,p.R)("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}getTexturePromise(e){return this._buildTexturePromise(e)}async _buildTexturePromise(e){const{text:t,style:r,resolution:n,textureStyle:i}=e,s=f.Z.get(_),a=function(e,t){const r=t.fontFamily,n=[],i={},s=e.match(/font-family:([^;"\s]+)/g);function a(e){i[e]||(n.push(e),i[e]=!0)}if(Array.isArray(r))for(let o=0;o<r.length;o++)a(r[o]);else a(r);s&&s.forEach(e=>{a(e.split(":")[1].trim())});for(const o in t.tagStyles)a(t.tagStyles[o].fontFamily);return n}(t,r),o=await async function(e){const t=e.filter(e=>v.l.has("".concat(e,"-and-url"))).map(e=>{if(!b.has(e)){const{entries:t}=v.l.get("".concat(e,"-and-url")),r=[];t.forEach(t=>{const n=t.url,i=t.faces.map(e=>({weight:e.weight,style:e.style}));r.push(...i.map(t=>y({fontWeight:t.weight,fontStyle:t.style,fontFamily:e},n)))}),b.set(e,Promise.all(r).then(e=>e.join("\n")))}return b.get(e)});return(await Promise.all(t)).join("\n")}(a),l=function(e,t,r,n){n||(n=T||(T=new _));const{domElement:i,styleElement:s,svgRoot:a}=n;i.innerHTML="<style>".concat(t.cssStyle,";</style><div style='padding:0'>").concat(e,"</div>"),i.setAttribute("style","transform-origin: top left; display: inline-block"),r&&(s.textContent=r),document.body.appendChild(a);const o=i.getBoundingClientRect();a.remove();const l=2*t.padding;return{width:o.width-l,height:o.height-l}}(t,r,o,s),d=Math.ceil(Math.ceil(Math.max(1,l.width)+2*r.padding)*n),h=Math.ceil(Math.ceil(Math.max(1,l.height)+2*r.padding)*n),p=s.image;p.width=2+(0|d),p.height=2+(0|h);const m=function(e,t,r,n,i){const{domElement:s,styleElement:a,svgRoot:o}=i;s.innerHTML="<style>".concat(t.cssStyle,"</style><div style='padding:0;'>").concat(e,"</div>"),s.setAttribute("style","transform: scale(".concat(r,");transform-origin: top left; display: inline-block")),a.textContent=n;const{width:l,height:u}=i.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",u.toString()),(new XMLSerializer).serializeToString(o)}(t,r,n,o,s);await function(e,t,r){return new Promise(async n=>{r&&await new Promise(e=>setTimeout(e,100)),e.onload=()=>{n()},e.src="data:image/svg+xml;charset=utf8,".concat(encodeURIComponent(t)),e.crossOrigin="anonymous"})}(p,m,function(){const{userAgent:e}=c.e.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(e)}()&&a.length>0);const x=p;let w;this._createCanvas&&(w=function(e,t){const r=u.N.getOptimalCanvasAndContext(e.width,e.height,t),{context:n}=r;return n.clearRect(0,0,e.width,e.height),n.drawImage(e,0,0),r}(p,n));const S=(0,g.M)(w?w.canvas:x,p.width-2,p.height-2,n);return i&&(S.source.style=i),this._createCanvas&&(this._renderer.texture.initSource(S.source),u.N.returnCanvasAndContext(w)),f.Z.return(s),S}returnTexturePromise(e){e.then(e=>{this._cleanUp(e)}).catch(()=>{(0,p.R)("HTMLTextSystem: Failed to clean texture")})}_cleanUp(e){d.W.returnTexture(e,!0),e.source.resource=null,e.source.uploadMethodId="unknown"}destroy(){this._renderer=null;for(const e in this._activeTextures)this._activeTextures[e]&&this.returnTexturePromise(this._activeTextures[e].promise);this._activeTextures=null}}w.extension={type:[n.Ag.WebGLSystem,n.Ag.WebGPUSystem,n.Ag.CanvasSystem],name:"htmlText"},n.XO.add(w),n.XO.add(l)},6595:(e,t,r)=>{r.d(t,{s:()=>i});var n=r(3693);function i(e,t){const{texture:r,bounds:i}=e,s=t._style._getFinalPadding();(0,n.y)(i,t._anchor,r);const a=t._anchor._x*s*2,o=t._anchor._y*s*2;i.minX-=s-a,i.minY-=s-o,i.maxX-=s-a,i.maxY-=s-o}},9385:(e,t,r)=>{function n(e,t,r){const n=(e>>24&255)/255;t[r++]=(255&e)/255*n,t[r++]=(e>>8&255)/255*n,t[r++]=(e>>16&255)/255*n,t[r++]=n}r.d(t,{V:()=>n})},9859:(e,t,r)=>{r.d(t,{u:()=>u});var n=r(2555),i=r(5202),s=r(6333),a=r(9801),o=r(4811);const l=class e extends a.V{constructor(){var t;let r=null!==(t=arguments.length<=0?void 0:arguments[0])&&void 0!==t?t:{};r instanceof Float32Array&&((0,o.t6)(o.lj,"use new MeshGeometry({ positions, uvs, indices }) instead"),r={positions:r,uvs:arguments.length<=1?void 0:arguments[1],indices:arguments.length<=2?void 0:arguments[2]}),r=(0,n.A)((0,n.A)({},e.defaultOptions),r);const a=r.positions||new Float32Array([0,0,1,0,1,1,0,1]);let l=r.uvs;l||(l=r.positions?new Float32Array(a.length):new Float32Array([0,0,1,0,1,1,0,1]));const u=r.indices||new Uint32Array([0,1,2,0,2,3]),d=r.shrinkBuffersToFit;super({attributes:{aPosition:{buffer:new i.h({data:a,label:"attribute-mesh-positions",shrinkToFit:d,usage:s.S.VERTEX|s.S.COPY_DST}),format:"float32x2",stride:8,offset:0},aUV:{buffer:new i.h({data:l,label:"attribute-mesh-uvs",shrinkToFit:d,usage:s.S.VERTEX|s.S.COPY_DST}),format:"float32x2",stride:8,offset:0}},indexBuffer:new i.h({data:u,label:"index-mesh-buffer",shrinkToFit:d,usage:s.S.INDEX|s.S.COPY_DST}),topology:r.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};l.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let u=l}}]);
//# sourceMappingURL=123.2fea6cac.chunk.js.map